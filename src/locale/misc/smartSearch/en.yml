# eslint-disable yml/key-name-casing
all:
  inputString: Start with {startWithSelect}.
  startWithSelect:
    false: an empty list
    true: a list of all the people in the organization
buttonLabels:
  add: Save selection
  addNewFilter: Add / remove people
  cancel: Cancel
  close: Close
  goBack: Go back to query
  save: Save
call_history:
  addRemoveSelect:
    add: Add
    sub: Remove
  assignmentSelect:
    any: any assignment
    assignment: assignment "{assignmentTitle}"
    none: This organization doesn't have any call assignments yet
  callSelect:
    called: have been called
    notreached: have been unsuccessfully tried
    reached: have been successfully reached
  examples:
    one: Add people who have been successfully reached at least 2 times in any assignment at any point in time.
    two: Remove people who have been called at least 1 time in assignment 'Campaign 2020' during the last 30 days.
  inputString: '{addRemoveSelect} people who {callSelect} at least {minTimesInput} {minTimes, plural, one {time} other {times}} in {assignmentSelect} {timeFrame}.'
campaign_participation:
  activitySelect:
    activity: activity "{activity}"
    any: any activity
  addRemoveSelect:
    add: Add
    sub: Remove
  bookedSelect:
    booked: been booked
    signed_up: signed up
  campaignSelect:
    any: any campaign
    campaign: campaign "{campaign}"
  examples:
    one: Add people who have signed up for events in any campaign with any activity at location 'Dorfplatz' at any point in time
    two: Remove people who have not been booked for events in any campaign with activity 'Put up posters' at any location before today.
  haveSelect:
    in: have
    notin: have not
  inputString: '{addRemoveSelect} people who {haveSelect} {bookedSelect} for events in {campaignSelect} with {activitySelect} at {locationSelect} {timeFrame}'
  locationSelect:
    any: any location
    location: location "{location}"
condition:
  conditionSelect:
    all: all
    any: any
    min_matching: at least
    none: none
  edit:
    all: '{conditionSelect}'
    any: '{conditionSelect}'
    min_matching: '{conditionSelect} {minMatchingInput}'
    none: '{conditionSelect}'
  preview:
    all: all
    any: any
    min_matching: 'at least {minMatching}'
    none: none
criteria:
  criteriaSelect:
    alt_phone: alternative phone number
    city: city
    co_address: co-address
    email: email
    first_name: first name
    gender: gender
    last_name: last name
    phone: phone number
    remove: Remove this criteria
    street_address: street address
    zip_code: zip code
  criterion: '{field} matches {value}'
  tuple: '{first} and {second}'
field:
  edit:
    date: '{fieldSelect} is {timeFrame}'
    none: This organization doesn't have any custom fields yet.
    text: '{fieldSelect} matches {freeTextInput}'
    url: '{fieldSelect} matches {freeTextInput}'
  fieldSelect:
    any: custom field
  preview:
    date: '{fieldName} is {timeFrame}'
    text: '{fieldName} matches {searchTerm}'
    url: '{fieldName} matches {searchTerm}'
filterCategories:
  campaignActivity: Campaign activity
  misc: Misc
  peopleDatabase: People
  phoneBanking: Phone banking
  surveys: Surveys
filterTitles:
  call_history: Based on their call history
  campaign_participation: Based on their campaign participation
  most_active: The most active people
  person_data: Based on their name, address or other data
  person_field: Based on custom fields
  person_tags: Based on their tags
  person_view: Based on a view
  random: A random selection of people
  sub_query: Based on another Smart Search query
  survey_option: Based on the options they have selected in survey questions
  survey_response: Based on their responses to survey questions
  survey_submission: People who have submitted a survey
  task: People who have engaged in tasks
  user: People who used Zetkin
headers:
  examples: Examples
  gallery: How would you like to select people?
misc:
  noOptions: No matching tags
most_active:
  addRemoveSelect:
    add: Add
    sub: Remove
  examples:
    one: Add the 100 most active members of the organization before today.
    two: Remove the 5 most active members of the organization at any point in time.
  inputString: '{addRemoveSelect} the {numPeopleSelect} most active {numPeople, plural, one {person} other {people}} in the organization {timeFrame}.'
person_data:
  addRemoveSelect:
    add: Add
    sub: remove
  ellipsis: '...'
  examples:
    one: Add any person whose first name is 'Clara' and whose last name is 'Zetkin'.
    two: Remove any person whose city is Stockholm.
  inputString: '{addRemoveSelect} any person whose {criteria}.'
person_field:
  addRemoveSelect:
    add: Add
    sub: Remove
  inputString: '{addRemoveSelect} any person whose {field}.'
person_tags:
  addRemoveSelect:
    add: Add
    sub: Remove
  examples:
    one: "Add people with at least one of the following tags: 'Member', 'Activist'"
    two: "Remove people with all of the following tags: 'Board member'"
  inputString: '{addRemoveSelect} people with {condition} of the following tags: {tags}'
person_view:
  addRemoveSelect:
    add: Add
    sub: Remove
  examples:
    one: Add people who are in the view 'Campaign 2020'.
    two: Remove people who are not in the view 'Campaign 2020'.
  inSelect:
    in: in
    notin: not in
  inputString: '{addRemoveSelect} people who are {inSelect} the view {viewSelect}.'
  viewSelect:
    none: This organization doesn't have any views yet
quantity:
  edit:
    integer: '{numInput} {quantitySelect}'
    percent: '{numInput} {quantitySelect}'
  preview:
    integer: '{people} {people, plural, one {person} other {people}}'
    percent: '{people} % of the people'
  quantitySelectLabel:
    integer: '{people, plural, one {person} other {people}}'
    percent: '% of the people'
  quantitySelectOptions:
    integer: a number of people
    percent: a percentage of people
query:
  edit:
    callassignment_goal: '{querySelect} of call assignment "{titleSelect}"'
    callassignment_target: '{querySelect} of call assignment "{titleSelect}"'
    none: '{querySelect}'
    standalone: '{querySelect} "{titleSelect}"'
  preview:
    callassignment_goal: the purpose group of call assignment "{queryTitle}"
    callassignment_target: the target group of call assignment "{queryTitle}"
    standalone: Smart Search query "{queryTitle}"
  querySelectLabel:
    callassignment_goal: the purpose group
    callassignment_target: the target group
    none: a Smart Search query
    standalone: Smart Search query
  querySelectOptions:
    callassignment_goal: the purpose group of a call assignment
    callassignment_target: the target group of a call assignment
    none: This organization doesn't have any call assignments or Smart Search queries yet.
    standalone: a standalone Smart Search query
random:
  addRemoveSelect:
    add: add
    sub: remove
  examples:
    one: Randomly add 20 people in the organization.
    two: Randomly remove 15% of the people in the organization.
  inputString: Randomly {addRemoveSelect} {quantity} in the organization.
readOnly: This Smart Search query is in read-only mode and cannot be edited.
sub_query:
  addRemoveSelect:
    add: Add
    sub: Sub
  examples:
    one: Remove people who match Smart Search Query 'People who live in Stockholm'.
    two: Add people who match the target group of call Assignment 'Assignment one'.
  inputString: '{addRemoveSelect} people that match {query}.'
survey_option:
  addRemoveSelect:
    add: Add
    sub: Remove
  conditionSelect:
    all: all
    any: any
    none: none
  examples:
    one: "Remove all people who have chosen all of the following options in survey 'Member survey 2020' (question 'Question one'): 'Sometimes', 'Never'"
    two: "Add all people who have chosen any of the following options in survey 'Member survey' (question 'Question two'): 'Option two'"
  inputString: '{addRemoveSelect} people who have chosen {conditionSelect} of the following options in {surveySelect} ({questionSelect}): {options}'
  questionSelect:
    any: a question
    none: There are no option questions in this survey
    question: question "{question}"
  surveySelect:
    any: a survey
    none: This organization has no surveys yet
    survey: survey "{surveyTitle}"
survey_response:
  addRemoveSelect:
    add: Add
    sub: Remove
  examples:
    one: People whose responses to survey 'Member survey' (any question) include 'organize'.
    two: People whose responses to survey 'Member survey' (question 'Question one') exactly match 'organize'.
  inputString: '{addRemoveSelect} people whose response to {surveySelect} ({questionSelect}) {matchSelect} "{freeTextInput}"'
  matchSelect:
    eq: exactly matches
    in: includes
    noteq: is not
    notin: does not include
  questionSelect:
    any: any question
    none: There are no free text questions in this survey
    question: question "{question}"
  surveySelect:
    any: a survey
    none: This organization has no surveys yet
    survey: survey "{surveyTitle}"
survey_submission:
  addRemoveSelect:
    add: Add
    sub: Remove
  examples:
    one: People who have submitted responses to survey 'Member survey 2020' before today.
    two: People who have submitted responses to survey 'Member survey' during the last 30 days.
  inputString: '{addRemoveSelect} people who have submitted responses to {surveySelect} {timeFrame}.'
  surveySelect:
    any: a survey
    none: This organization has no surveys yet
    survey: survey "{surveyTitle}"
task:
  addRemoveSelect:
    add: Add
    sub: Remove
  campaignSelect:
    any: any campaign
    campaign: campaign "{campaign}"
    in: ' in '

  examples:
    one: Add people who have completed task "Tell your friends" at least once at any point in time
    two: Add people who have ignored any task in any campaign between 2 and 5 times before today
  inputString: '{addRemoveSelect} people who have {taskStatusSelect} {taskSelect}{campaignSelect} {matchingSelect} {timeFrame}'
  taskSelect:
    any: any task
    task: task "{task}"
  taskStatusSelect:
    assigned: been assigned
    completed: completed
    ignored: ignored
user:
  addRemoveSelect:
    add: Add
    sub: Remove
  connectedSelect:
    false: not connected
    true: connected
  examples:
    one: Remove all people who are connected to a Zetkin user.
    two: Add all people who are not connected to a Zetkin user.
  inputString: '{addRemoveSelect} all people who are {connectedSelect} to a Zetkin user.'
